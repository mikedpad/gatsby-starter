{"version":3,"sources":["webpack:///./src/components/Blog/PostPreview.jsx","webpack:///./src/pages/blog.js","webpack:///./src/styles/colors.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Link/Link.jsx","webpack:///./src/components/Link/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/styles/fonts.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout/Navigation.jsx","webpack:///./src/components/Layout/Layout.jsx","webpack:///./src/components/Layout/index.js"],"names":["PostPreview","_ref","id","path","fields","_ref$frontmatter","frontmatter","title","date","dateFormat","react_default","a","createElement","key","data-post-id","dateTime","Link","to","propTypes","PropTypes","string","isRequired","shape","Blog","edges","_2825653160","data","allMarkdownRemark","Layout","map","node","Blog_PostPreview","Object","assign","__webpack_require__","d","__webpack_exports__","bg","fg","links","normal","active","React","createContext","object","func","children","other","objectWithoutPropertiesLoose_default","test","gatsby_link_default","href","rel","target","components_Link_Link","m","module","exports","require","default","serif","sansSerif","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","pathname","UnorderedList","styled","ul","withConfig","displayName","componentId","ListItem","li","NavLink","Navigation","GlobalCSS","createGlobalStyle","_templateObject","Header","header","lighten","Main","main","Wrapper","div","fluidRange","prop","fromSize","toSize","FlexWrap","Title","h1","TitleLink","siteTitle","_856328897","site","siteMetadata","Fragment","Helmet","Layout_Navigation","defaultProps","components_Layout_Layout"],"mappings":"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","file":"component---src-pages-blog-js-48fdd87ad0a0a1714c70.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Link from '../Link';\n\nconst PostPreview = ({ id, fields: { path }, frontmatter: { title, date, dateFormat } }) => (\n  <article key={id} data-post-id={id}>\n    <time dateTime={date}>{dateFormat}</time>\n    <Link to={path}>\n      <h1>{title}</h1>\n    </Link>\n  </article>\n);\n\nexport default PostPreview;\n\nexport const postPreviewFragment = graphql`\n  fragment PostPreviewFragment on MarkdownRemark {\n    id\n    fields {\n      path\n    }\n    frontmatter {\n      title\n      date\n      dateFormat: date(formatString: \"MMM D, YYYY\")\n    }\n  }\n`;\n\nPostPreview.propTypes = {\n  id: PropTypes.string.isRequired,\n  fields: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n  }).isRequired,\n  frontmatter: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    dateFormat: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Layout from '../components/Layout';\nimport PostPreview from '../components/Blog/PostPreview';\n\nconst Blog = () => {\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(graphql`\n    query BlogQuery {\n      allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"^//src/markdown/blog/\" } }\n        sort: { fields: [frontmatter___date], order: DESC }\n      ) {\n        edges {\n          node {\n            ...PostPreviewFragment\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <Layout title=\": Blog\">\n      {edges.map(({ node }) => (\n        <PostPreview key={node.id} {...node} />\n      ))}\n    </Layout>\n  );\n};\n\nexport default Blog;\n","const bg = `#242a31`;\nconst fg = `#afafb1`;\nconst headline = `#f5f5f7`;\nconst links = {\n  normal: `#455a72`,\n  active: `#698eb9`,\n};\n\nexport { bg, fg, headline, links };\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as GatsbyLink } from 'gatsby';\n\nconst Link = ({ children, to, ...other }) => {\n  const internal = /^\\/(?!\\/)/.test(to);\n\n  if (internal) {\n    return (\n      <GatsbyLink to={to} {...other}>\n        {children}\n      </GatsbyLink>\n    );\n  }\n\n  return (\n    <a href={to} rel=\"noopener noreferrer\" target=\"_blank\" {...other}>\n      {children}\n    </a>\n  );\n};\n\nexport default Link;\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n};\n","export { default } from './Link';\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","const serif = `Lora, 'Times New Roman', Times, serif`;\nconst sansSerif = `'Source Sans Pro', Helvetica, Arial, sans- serif`;\nconst monospace = `'Source Code Pro', Inconsolata, Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace`;\n\nexport { serif, sansSerif, monospace };\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport styled from 'styled-components';\nimport Link from '../Link';\nimport { links } from '../../styles/colors';\n\nconst UnorderedList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst ListItem = styled.li`\n  display: inline-block;\n  margin-left: 0.75rem;\n\n  &:first-child {\n    margin-left: 0;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  background-color: inherit;\n  color: ${links.normal};\n  font-size: 1.25rem;\n  font-weight: 300;\n  padding: 8px 10px;\n  text-decoration: none;\n  transition: all 0.2s ease-out;\n\n  &:hover {\n    background-color: #ffffff33;\n    color: #fff;\n  }\n`;\n\nconst Navigation = () => {\n  return (\n    <UnorderedList>\n      <ListItem>\n        <NavLink to=\"/\">Home</NavLink>\n      </ListItem>\n      <ListItem>\n        <NavLink to=\"/blog\">Blog</NavLink>\n      </ListItem>\n    </UnorderedList>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { fluidRange, lighten } from 'polished';\nimport Link from '../Link';\nimport Navigation from './Navigation';\nimport { sansSerif } from '../../styles/fonts';\nimport { bg, fg } from '../../styles/colors';\n\nconst GlobalCSS = createGlobalStyle`\n  :root {\n    background-color: ${bg};\n    color: ${fg};\n    font-family: ${sansSerif};\n    text-rendering: optimizeLegibility;\n  }\n`;\n\nconst Header = styled.header`\n  background-color: ${lighten(0.05, bg)};\n  margin-bottom: 1.45rem;\n`;\n\nconst Main = styled.main`\n  overflow: auto;\n  padding: 0;\n`;\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 1.5rem 1.25rem;\n\n  ${fluidRange(\n    {\n      prop: `max-width`,\n      fromSize: `600px`,\n      toSize: `960px`,\n    },\n    `640px`,\n    `1200px`,\n  )}\n`;\n\nconst FlexWrap = styled.div`\n  align-items: center;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n`;\n\nconst TitleLink = styled(Link)`\n  color: ${fg};\n  text-decoration: none;\n  transition: color 0.2s ease-out;\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\nconst Layout = ({ title, children }) => {\n  const {\n    site: {\n      siteMetadata: { title: siteTitle },\n    },\n  } = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <GlobalCSS />\n      <Helmet>\n        <title>{`${siteTitle}${title || ``}`}</title>\n      </Helmet>\n      <Header>\n        <Wrapper>\n          <FlexWrap>\n            <Title>\n              <TitleLink to=\"/\">{siteTitle}</TitleLink>\n            </Title>\n            <nav>\n              <Navigation />\n            </nav>\n          </FlexWrap>\n        </Wrapper>\n      </Header>\n      <Main>\n        <Wrapper>{children}</Wrapper>\n      </Main>\n    </>\n  );\n};\n\nexport default Layout;\n\nLayout.propTypes = {\n  title: PropTypes.string,\n};\n\nLayout.defaultProps = {\n  title: null,\n};\n","export { default } from './Layout';\n"],"sourceRoot":""}