{"version":3,"sources":["webpack:///./src/templates/PostTemplate.jsx","webpack:///./src/components/SiteLink/SiteLink.jsx","webpack:///./src/styles/colors.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/SiteLink/index.js","webpack:///./src/styles/fonts.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout/Navigation.jsx","webpack:///./src/components/Layout/Layout.jsx","webpack:///./src/components/Layout/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","postQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_styles_fonts__WEBPACK_IMPORTED_MODULE_2__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","Article","styled","article","withConfig","displayName","componentId","Title","h1","sansSerif","DateTime","div","Body","section","serif","PostTemplate","_ref","_ref$data$markdownRem","data","markdownRemark","id","_ref$data$markdownRem2","frontmatter","title","date","dateFormat","html","a","createElement","data-post-id","dateTime","dangerouslySetInnerHTML","__html","SiteLink","children","to","other","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","test","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","Object","assign","onClick","event","persist","toPath","target","pathname","currentPath","document","location","console","log","stopPropagation","navigate","replace","href","rel","propTypes","PropTypes","string","isRequired","bg","fg","links","normal","active","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","object","func","m","module","exports","require","default","_SiteLink__WEBPACK_IMPORTED_MODULE_0__","ProdPageRenderer","pageResources","InternalPageRenderer","json","shape","UnorderedList","ul","ListItem","li","NavLink","Navigation","react_default","GlobalCSS","createGlobalStyle","_templateObject","Header","header","lighten","Main","main","Wrapper","fluidRange","prop","fromSize","toSize","FlexWrap","TitleLink","Layout","siteTitle","_856328897","site","siteMetadata","Fragment","Helmet_default","Layout_Navigation","defaultProps","components_Layout_Layout"],"mappings":"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","file":"component---src-templates-post-template-jsx-d4e2d538ca7490e3606f.js","sourcesContent":["/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { serif, sansSerif } from '../styles/fonts';\nimport Layout from '../components/Layout';\n\nconst Article = styled.article`\n  margin: 0;\n`;\n\nconst Title = styled.h1`\n  font-family: ${sansSerif};\n  font-size: 1.75rem;\n  margin-bottom: 0.5em;\n`;\n\nconst DateTime = styled.div``;\n\nconst Body = styled.section`\n  font-family: ${serif};\n  margin: 2rem 0;\n`;\n\nconst PostTemplate = ({\n  data: {\n    markdownRemark: {\n      id,\n      frontmatter: { title, date, dateFormat },\n      html,\n    },\n  },\n}) => (\n  <Layout title={`: ${title}`}>\n    <Article data-post-id={id}>\n      <header>\n        <Title>{title}</Title>\n        <DateTime>\n          <time dateTime={date}>{dateFormat}</time>\n        </DateTime>\n      </header>\n      <Body dangerouslySetInnerHTML={{ __html: html }} />\n    </Article>\n  </Layout>\n);\n\nexport default PostTemplate;\n\nexport const postQuery = graphql`\n  query PostQuery($path: String!) {\n    markdownRemark(fields: { path: { eq: $path } }) {\n      id\n      frontmatter {\n        title\n        date\n        dateFormat: date(formatString: \"MMM D, YYYY â€” h:mma z\")\n      }\n      html\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, navigate } from 'gatsby';\n\nconst SiteLink = ({ children, to, ...other }) => {\n  const navigateToSelf = event => {\n    event.persist();\n    const toPath = event.target.pathname;\n    const currentPath = document.location.pathname;\n    console.log(`To: ${toPath} | Current: ${currentPath}`);\n    if (toPath === currentPath) {\n      event.stopPropagation();\n      navigate(toPath, { replace: true });\n      return;\n    }\n\n    navigate(toPath);\n  };\n\n  const internal = /^\\/(?!\\/)/.test(to);\n\n  if (internal) {\n    return (\n      <Link to={to} onClick={navigateToSelf} {...other}>\n        {children}\n      </Link>\n    );\n  }\n\n  return (\n    <a href={to} rel=\"noopener noreferrer\" target=\"_blank\" {...other}>\n      {children}\n    </a>\n  );\n};\n\nexport default SiteLink;\n\nSiteLink.propTypes = {\n  to: PropTypes.string.isRequired,\n};\n","const bg = `#242a31`;\nconst fg = `#afafb1`;\nconst headline = `#f5f5f7`;\nconst links = {\n  normal: `#455a72`,\n  active: `#698eb9`,\n};\n\nexport { bg, fg, headline, links };\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export { default } from './SiteLink';\n","const serif = `Lora, 'Times New Roman', Times, serif`;\nconst sansSerif = `'Source Sans Pro', Helvetica, Arial, sans- serif`;\nconst monospace = `'Source Code Pro', Inconsolata, Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace`;\n\nexport { serif, sansSerif, monospace };\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport SiteLink from '../SiteLink';\nimport { links } from '../../styles/colors';\n\nconst UnorderedList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst ListItem = styled.li`\n  display: inline-block;\n  margin-left: 0.75rem;\n\n  &:first-child {\n    margin-left: 0;\n  }\n`;\n\nconst NavLink = styled(SiteLink)`\n  background-color: inherit;\n  color: ${links.normal};\n  font-size: 1.25rem;\n  font-weight: 300;\n  padding: 8px 10px;\n  text-decoration: none;\n  transition: all 0.2s ease-out;\n\n  &:hover {\n    background-color: #ffffff33;\n    color: #fff;\n  }\n`;\n\nconst Navigation = () => {\n  return (\n    <UnorderedList>\n      <ListItem>\n        <NavLink to=\"/\">Home</NavLink>\n      </ListItem>\n      <ListItem>\n        <NavLink to=\"/blog\">Blog</NavLink>\n      </ListItem>\n    </UnorderedList>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { fluidRange, lighten } from 'polished';\nimport SiteLink from '../SiteLink/SiteLink';\nimport Navigation from './Navigation';\nimport { sansSerif } from '../../styles/fonts';\nimport { bg, fg } from '../../styles/colors';\n\nconst GlobalCSS = createGlobalStyle`\n  :root {\n    background-color: ${bg};\n    color: ${fg};\n    font-family: ${sansSerif};\n    text-rendering: optimizeLegibility;\n  }\n`;\n\nconst Header = styled.header`\n  background-color: ${lighten(0.05, bg)};\n  margin-bottom: 1.45rem;\n`;\n\nconst Main = styled.main`\n  overflow: auto;\n  padding: 0;\n`;\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 1.5rem 1.25rem;\n\n  ${fluidRange(\n    {\n      prop: `max-width`,\n      fromSize: `600px`,\n      toSize: `960px`,\n    },\n    `640px`,\n    `1200px`,\n  )}\n`;\n\nconst FlexWrap = styled.div`\n  align-items: center;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n`;\n\nconst TitleLink = styled(SiteLink)`\n  color: ${fg};\n  text-decoration: none;\n  transition: color 0.2s ease-out;\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\nconst Layout = ({ title, children }) => {\n  const {\n    site: {\n      siteMetadata: { title: siteTitle },\n    },\n  } = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <GlobalCSS />\n      <Helmet>\n        <title>{`${siteTitle}${title || ``}`}</title>\n      </Helmet>\n      <Header>\n        <Wrapper>\n          <FlexWrap>\n            <Title>\n              <TitleLink to=\"/\">{siteTitle}</TitleLink>\n            </Title>\n            <nav>\n              <Navigation />\n            </nav>\n          </FlexWrap>\n        </Wrapper>\n      </Header>\n      <Main>\n        <Wrapper>{children}</Wrapper>\n      </Main>\n    </>\n  );\n};\n\nexport default Layout;\n\nLayout.propTypes = {\n  title: PropTypes.string,\n};\n\nLayout.defaultProps = {\n  title: null,\n};\n","export { default } from './Layout';\n"],"sourceRoot":""}